name: Convert README to PDF

on:
  push:
    branches: [ main, master ]
    paths:
      - 'readme.md'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the workflow with debug logging'
        required: false
        default: false
        type: boolean

jobs:
  convert_to_pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-plain-generic fonts-liberation fonts-dejavu

      - name: Create GitHub-style template
        run: |
          cat > github-template.tex << 'EOF'
          \documentclass[11pt]{article}
          \usepackage{amssymb,amsmath}
          \usepackage{fixltx2e}
          \usepackage{enumitem}
          \usepackage{lmodern}
          \usepackage{xcolor}
          \usepackage{fontspec}
          \usepackage{titlesec}
          \usepackage[margin=1in]{geometry}
          
          % Add hyperref package for \hypertarget command
          \usepackage{hyperref}
          \hypersetup{
            colorlinks=true,
            linkcolor=blue,
            urlcolor=blue
          }
          
          % Define GitHub colors
          \definecolor{githubBlack}{HTML}{24292E}
          \definecolor{githubBlue}{HTML}{0366D6}
          \definecolor{githubGray}{HTML}{586069}
          
          % Remove section numbering and add GitHub-like styling
          \titleformat{\section}{\LARGE\bfseries\color{githubBlack}}{}{0em}{}[\vspace{-0.3em}\rule{\textwidth}{0.1pt}]
          \titleformat{\subsection}{\large\bfseries\color{githubBlack}}{}{0em}{}[\vspace{-0.3em}\rule{\textwidth}{0.1pt}]
          \titleformat{\subsubsection}{\normalsize\bfseries\color{githubBlack}}{}{0em}{}
          
          % Customize paragraph to be smaller than headings
          \makeatletter
          \renewcommand{\normalsize}{\@setfontsize\normalsize{10.5pt}{14pt}}
          \makeatother

          % Better lists that look more like GitHub
          \setlist[itemize]{leftmargin=*, itemsep=3pt}
          
          % Default font - use DejaVu Sans which is similar to GitHub's font
          \setmainfont{DejaVu Sans}

          % Add more space after italicized job dates
          \let\oldEmph\emph
          \renewcommand{\emph}[1]{{\itshape\color{githubGray}#1\par\vspace{0.5em}}}

          % Remove page numbers
          \pagenumbering{gobble}

          % Add some extra space at the top of the document
          \setlength{\topmargin}{-0.5in}

          \begin{document}
          \color{githubBlack}

          $body$

          \end{document}
          EOF

      - name: Preprocess README
        run: |
          cp readme.md readme_processed.md
          # Ensure proper spacing for list items
          sed -i 's/^- /\n- /g' readme_processed.md
          sed -i 's/^\* /\n* /g' readme_processed.md
          # Add blank lines before headings
          sed -i 's/^##/\n##/g' readme_processed.md
          sed -i 's/^###/\n###/g' readme_processed.md

      - name: Convert with GitHub-style template
        run: |
          echo "Converting with GitHub-style template"
          
          pandoc readme_processed.md \
            -o readme.pdf \
            --pdf-engine=xelatex \
            -V papersize=letter \
            --template=github-template.tex
          
          if [ -f "readme.pdf" ]; then
            echo "✅ Successfully created readme.pdf"
            ls -la readme.pdf
          else
            echo "❌ Failed to create readme.pdf"
          fi

      - name: Commit PDF file
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Add the PDF file
          git add readme.pdf
          
          # Try to commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Generate GitHub-styled PDF from readme.md"
            git push
          fi
